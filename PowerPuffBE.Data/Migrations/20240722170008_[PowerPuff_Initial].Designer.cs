// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PowerPuffBE.Data;

#nullable disable

namespace PowerPuffBE.Data.Migrations
{
    [DbContext(typeof(PowerPuffDbContext))]
    [Migration("20240722170008_[PowerPuff_Initial]")]
    partial class PowerPuff_Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PowerPuffBE.Data.Entities.ImageEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReactorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("PowerPuffBE.Data.Entities.ReactorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Reactor");
                });

            modelBuilder.Entity("PowerPuffBE.Data.Entities.ReactorProductionChecksEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("MeasureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PowerProduction")
                        .HasColumnType("int");

                    b.Property<Guid>("ReactorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Temperature")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReactorId");

                    b.ToTable("ReactorProductionChecks");
                });

            modelBuilder.Entity("PowerPuffBE.Data.Entities.ReactorProductionChecksEntity", b =>
                {
                    b.HasOne("PowerPuffBE.Data.Entities.ReactorEntity", "Reactor")
                        .WithMany("ProductionChecks")
                        .HasForeignKey("ReactorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reactor");
                });

            modelBuilder.Entity("PowerPuffBE.Data.Entities.ReactorEntity", b =>
                {
                    b.Navigation("ProductionChecks");
                });
#pragma warning restore 612, 618
        }
    }
}
